@model OnlineShow.Models.RegisterModel
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl" rel="stylesheet" type="text/css" />
@{ MvcCaptcha registerCapchar = new MvcCaptcha("registerCapchar"); }

@{
    ViewBag.Title = "Đăng ký thành viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section jsFooter{
    <script src="/assets/client/js/controller/userController.js"></script>
}
<div class="content">
    <h2>Đăng ký thành viên</h2>
    @using (Html.BeginForm("Register", "User", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Thông tin cá nhân</h4>
            <hr />
            <div class="form-group">
                <label class="col-md-2"></label>
                <div class="col-md-6">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    @if (ViewBag.Success != null)
                    {
                        <div class="alert alert-success">@ViewBag.Success</div>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger col-md-8" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.ProvinceID, new SelectList(new string[] { }), new { @class = "form-control col-md-6", @id = "ddlprovince" })
                    @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.DistrictID, new SelectList(new string[] { }), new { @class = "form-control col-md-6", @id = "ddldistrict" })
                    @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.Captcha(registerCapchar)
                    @Html.TextBox("CaptchaCode")
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Đăng ký" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>
